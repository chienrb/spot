<launch>

  <arg name="world" default="empty"/> 
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!--Load empty world-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find spot_description)/worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="model" default="$(find spot_description)/models/notspot.urdf"/>
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -param robot_description -model spotmicroai -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) "/>

  <!--Load controller-->
    <rosparam file="$(find spot_controller)/config/controllers.yaml" command="load"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" ns="spot_controller" args="FR1_joint FR2_joint FR3_joint
                              FL1_joint FL2_joint FL3_joint
                              RR1_joint RR2_joint RR3_joint
                              RL1_joint RL2_joint RL3_joint"/>

  <!-- Robot State Publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/spotmicroai/joint_states" />
    <param name="publish_frequency" type="double" value="10.0" />
  </node>

  <include file="$(find spot_controller)/launch/stand_mode.launch"/>
  <!--include file="$(find spot_controller)/launch/rest_mode.launch"/-->

</launch>

